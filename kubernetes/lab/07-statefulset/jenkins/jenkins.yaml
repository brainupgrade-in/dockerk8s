apiVersion: v1
kind: Service
metadata:
  name: jenkins
spec:
  type: ClusterIP
  selector:
    app: jenkins  
  ports:
  - port: 80
    name: "http"
    targetPort: 8080
  - port: 8080
    name: "ui"
    targetPort: 8080
  - port: 50000
    name: "slave"
    targetPort: 50000  
---
apiVersion: v1
kind: Service
metadata:
  name: docker
spec:
  selector:
    app: jenkins  
  ports:
  - port: 2375
    name: "tcp"
    targetPort: 2375     
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jenkins
spec:
  serviceName: "jenkins"
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: /prometheus
    spec:
      volumes:
      - name: dind-storage
        emptyDir: {}
      initContainers:
      - name: init-chown
        image: alpine
        volumeMounts:
          - name: jenkins-home
            mountPath: /var/jenkins_home
        env:
        - name: JENKINS_HOME
          value: /var/jenkins_home
        - name: UID
          value: '1000'
        command:
        - sh
        - -c
        - if [ ! -f $JENKINS_HOME ]; then chown $UID:$UID -R $JENKINS_HOME; touch $JENKINS_HOME; chown $UID:$UID $JENKINS_HOME; fi        
      containers:
      - name: jenkins
        image: brainupgrade/jenkins:2.414.1x3
        env:
          - name: DOCKER_HOST
            value: tcp://localhost:2375
        ports:
        - containerPort: 8080
          name: web
        - containerPort: 50000
          name: agent-port
        volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home
        - name: dind-storage
          mountPath: /var/lib/docker
      - name: dind
        image: brainupgrade/docker:20-dind
        securityContext:
          privileged: true
        env:
        - name: DOCKER_TLS_CERTDIR
          value: ''
        volumeMounts:
          - name: dind-storage
            mountPath: /var/lib/docker
  volumeClaimTemplates:
  - metadata:
      name: jenkins-home
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi