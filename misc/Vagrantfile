BOX_IMAGE    = "ubuntu/focal64"
MASTER_COUNT = 1
NODE_COUNT   = 1
MASTER_IP    = "192.168.26.10"
MASTER_PORT  = "8443"
NODE_IP_NW   = "192.168.26."
POD_NW_CIDR  = "10.244.0.0/16"

DOCKER_VER = "5:20.10.7~3-0~ubuntu-focal"
KUBE_VER   = "1.20.0"
KUBE_TOKEN = "ayngk7.m1555duk5x2i3ctt"
IMAGE_REPO = "k8s.gcr.io"


init_script = <<SCRIPT
#!/bin/bash

set -eo pipefail

cat > /etc/sysctl.d/k8s.conf <<EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_nonlocal_bind = 1
net.ipv4.ip_forward = 1
vm.swappiness=0
EOF
sysctl --system

echo "apt_preserve_sources_list: true" > /etc/cloud/cloud.cfg.d/99-apt-preserve-sources-list.cfg
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"
apt-get update && apt-get install -y docker-ce=#{DOCKER_VER}
cat > /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"]
}
EOF
mkdir -p /etc/systemd/system/docker.service.d
systemctl daemon-reload
systemctl enable docker && systemctl restart docker

curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - 
cat > /etc/apt/sources.list.d/kubernetes.list <<EOF
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF

#apt-get update && apt-get install -y kubelet=#{KUBE_VER}-00 kubeadm kubectl

# https://github.com/kubernetes/kubernetes/issues/45487
#echo 'User=root' >> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
#systemctl daemon-reload

#systemctl enable kubelet && systemctl restart kubelet
#usermod -aG docker vagrant
SCRIPT


Vagrant.configure("2") do |config|
  config.vm.box = BOX_IMAGE
  config.vm.box_check_update = false

  config.vm.provider "virtualbox" do |l|
    l.cpus = 1
    l.memory = "1024"
  end

  config.vm.provision :shell, inline: init_script

  config.hostmanager.enabled = true
  config.hostmanager.manage_guest = true

  (1..MASTER_COUNT).each do |i|
    ha = MASTER_COUNT > 1
    hostname= "master#{ha ? i: ''}"
    config.vm.define(hostname) do |subconfig|
      subconfig.vm.hostname = hostname
      subconfig.vm.network :private_network, nic_type: "virtio", ip: ha ? NODE_IP_NW + "#{i + 10}" : MASTER_IP
      subconfig.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--cpus", "2"]
        vb.customize ["modifyvm", :id, "--memory", "2048"]
      end
    end
  end

  (1..NODE_COUNT).each do |i|
    config.vm.define("node#{i}") do |subconfig|
      subconfig.vm.hostname = "node#{i}"
      subconfig.vm.network :private_network, nic_type: "virtio", ip: NODE_IP_NW + "#{i + 20}"
    end
  end
end
