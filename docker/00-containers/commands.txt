docker run -it busybox
docker run --name alpine -d -it alpine (launch shell but in the background)
docker run -p 8080:80 tutum/hello-world  (creates container with random name and in the foreground)

docker run --name ngx -d -p 8080:80 nginx  (connects to tty, Ctrl+C to exit)
docker attach ngx

docker run -P --name nginx nginx  ( map exposed ports to random ports on the host)
docker run -d -p 8000-9000:80 nginx  (maps port 80 to any random port between 8000 to 9000 on host)
docker run --restart always -p 8080:80 -it nginx

docker run -ti --rm r-base
docker run -ti --rm -v /tmp/dockerk8s/docker/containers/hello-r/:/tmp/ r-base Rscript /tmp/main.R
docker run --name db -e MYSQL_ROOT_PASSWORD=docker -e MYSQL_DATABASE=docker -e MYSQL_USER=docker -e MYSQL_PASSWORD=docker -d mysql:5.6   (provide environment params to the process)
docker run --link db:dbserver -e spring.datasource.url=jdbc:mysql://dbserver:3306/docker -p 8080:8080 -d rajeshgheware/spring-db:1.0.0
docker run -d -p 8080:8080 brainupgrade/weather:monolith
docker run --log-opt max-size=20m --log-opt max-file=5 --link db:mysql -itd -p 8080:80 --name springdb --restart always  -v /tmp/docker/:/tmp/docker/ -e JAVA_OPTS='-Xms1g' -e java.security.egd=file:/dev/./urandom  -e spring.profiles.active=dev  -e spring.datasource.url=jdbc:mysql://mysql:3306/db  -e jasypt.encryptor.password=pwd -e security.oauth2.client.clientId=clientid -e security.oauth2.client.clientSecret=auth -e aws.accessKeyId=aa -e aws.secretKey=aa  -e server.port=80 rajeshgheware/spring-db:1.0.0
